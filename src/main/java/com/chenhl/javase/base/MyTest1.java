package com.chenhl.javase.base;

/**
 * 关于计算机的原码，反码和补码
 * 正数的原码，反码和补码是一样的
 * 负数的原码，将一个数转换为二进制，然后符号位为1
 * 负数的反码，将原码除符号位外，按位取反得到反码
 * 负数的补码，将反码加1，得到补码，负数在计算机中是以补码的形式存在的
 */
public class MyTest1 {

    public static void main(String[] args) {
        int i = -5;
        /*
        10000000 00000000 00000000 00000101  这是-5的原码，
        11111111 11111111 11111111 11111010  这是-5的反码，反码是对原码按位取反，符号位不变，
        11111111 11111111 11111111 11111011  这是-5的补码，反码+1=补码，反码=补码-1，负数在计算机里以补码的形式存在，-5是这样的

        补充：
        &：按位与：同时为1时，结果为1
        |：按位或：只要有一位为1，结果为1
        ^：按位异或：相同为0，不同为1
        ~：按位取反

         */
        System.out.println(Integer.toBinaryString(i));//11111111111111111111111111111011
    }
}
